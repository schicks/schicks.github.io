class o extends Map{constructor(n,t=g){if(super(),Object.defineProperties(this,{_intern:{value:new Map},_key:{value:t}}),n!=null)for(const[r,s]of n)this.set(r,s)}get(n){return super.get(a(this,n))}has(n){return super.has(a(this,n))}set(n,t){return super.set(f(this,n),t)}delete(n){return super.delete(h(this,n))}}function a({_intern:e,_key:n},t){const r=n(t);return e.has(r)?e.get(r):t}function f({_intern:e,_key:n},t){const r=n(t);return e.has(r)?e.get(r):(e.set(r,t),t)}function h({_intern:e,_key:n},t){const r=n(t);return e.has(r)&&(t=e.get(r),e.delete(r)),t}function g(e){return e!==null&&typeof e=="object"?e.valueOf():e}function l(e,n){switch(arguments.length){case 0:break;case 1:this.range(e);break;default:this.range(n).domain(e);break}return this}const c=Symbol("implicit");function p(){var e=new o,n=[],t=[],r=c;function s(u){let i=e.get(u);if(i===void 0){if(r!==c)return r;e.set(u,i=n.push(u)-1)}return t[i%t.length]}return s.domain=function(u){if(!arguments.length)return n.slice();n=[],e=new o;for(const i of u)e.has(i)||e.set(i,n.push(i)-1);return s},s.range=function(u){return arguments.length?(t=Array.from(u),s):t.slice()},s.unknown=function(u){return arguments.length?(r=u,s):r},s.copy=function(){return p(n,t).unknown(r)},l.apply(s,arguments),s}export{l as i,p as o};
